// <auto-generated />
using System;
using ConectorAnaliticoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TestesFOILApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConectorAnaliticoApi.Models.CategoriaPerguntaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ValeUm")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ConectorAnaliticoApi.Models.PerguntaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CategoriaPerguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_pergunta_id");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPerguntaId");

                    b.ToTable("pergunta", (string)null);
                });

            modelBuilder.Entity("ConectorAnaliticoApi.Models.PerguntaModel", b =>
                {
                    b.HasOne("ConectorAnaliticoApi.Models.CategoriaPerguntaModel", "CategoriaPergunta")
                        .WithMany("Perguntas")
                        .HasForeignKey("CategoriaPerguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaPergunta");
                });

            modelBuilder.Entity("ConectorAnaliticoApi.Models.CategoriaPerguntaModel", b =>
                {
                    b.Navigation("Perguntas");
                });
#pragma warning restore 612, 618
        }
    }
}
