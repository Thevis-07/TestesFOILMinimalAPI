// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestesFOILMinimalApi.Data;

#nullable disable

namespace TestesFOILMinimalApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828134209_TabelasAlunosRespostas")]
    partial class TabelasAlunosRespostas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestesFOILMinimalApi.Models.AlunoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<int>("Semestre")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("aluno", (string)null);
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.CategoriaPerguntaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("ValeUm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("categorias_perguntas", (string)null);
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.PerguntaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CategoriaPerguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_pergunta_id");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPerguntaId");

                    b.ToTable("pergunta", (string)null);
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.RespostaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PerguntaId")
                        .HasColumnType("uuid");

                    b.Property<int>("ValorMae")
                        .HasColumnType("integer");

                    b.Property<int>("ValorPai")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("PerguntaId");

                    b.ToTable("resposta", (string)null);
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.ResultadoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uuid");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMae")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPai")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("resultado", (string)null);
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.PerguntaModel", b =>
                {
                    b.HasOne("TestesFOILMinimalApi.Models.CategoriaPerguntaModel", "CategoriaPergunta")
                        .WithMany("Perguntas")
                        .HasForeignKey("CategoriaPerguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaPergunta");
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.RespostaModel", b =>
                {
                    b.HasOne("TestesFOILMinimalApi.Models.AlunoModel", "Aluno")
                        .WithMany("Respostas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestesFOILMinimalApi.Models.PerguntaModel", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.ResultadoModel", b =>
                {
                    b.HasOne("TestesFOILMinimalApi.Models.AlunoModel", "Aluno")
                        .WithMany("Resultados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestesFOILMinimalApi.Models.CategoriaPerguntaModel", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.AlunoModel", b =>
                {
                    b.Navigation("Respostas");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("TestesFOILMinimalApi.Models.CategoriaPerguntaModel", b =>
                {
                    b.Navigation("Perguntas");
                });
#pragma warning restore 612, 618
        }
    }
}
